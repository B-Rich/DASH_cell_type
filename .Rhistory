)
groups
nlevels(groups)
p <- ggplot(data.frame(df_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups, shape=groups)) +
theme_bw() +theme(text = element_text(size=10))+
scale_shape_manual(values=1:nlevels(groups))
)
p <- ggplot(data.frame(df_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=10)) #+
hist(data.frame(df_Top4_pc[,1]))
hist(as.numeric(data.frame(df_Top4_pc[,1])))
dim(df)
hist(df[1,])
hist(df[,1])
hist(df[,2])
hist(as.numeric(df[,2])
)
hist(as.numeric(df[,1]))
colnames(df)
hist(as.numeric(df[1,]))
hist(as.numeric(df[2,]))
hist(as.numeric(df_trans_mat[1,]))
hist(as.numeric(df_trans_mat[,1]))
df<-cbind(scale(exp_deg_rmna[inter,]),scale(ref_deg_rmna[inter,-c(1,2)])
df<-cbind(scale(exp_deg_rmna[inter,]),scale(ref_deg_rmna[inter,-c(1,2)]))
df<-cbind(scale(exp_deg_rmna[inter,]),scale(ref_deg_rmna[inter,-c(1,2)]))
dim(df)
exp_deg_rmna_scale=scale(exp_deg_rmna)
exp_deg_rmna_mat=data.matrix(exp_deg_rmna)
exp_deg_rmna_mat_scale=scale(exp_deg_rmna_mat)
ref_deg_rmna_mat=data.matrix(ref_deg_rmna)
ref_deg_rmna_mat_scale=scale(ref_deg_rmna_mat)
## add gene names as rownames to reference dataset
rownames(ref_deg_rmna)=ref_deg_rmna$IDENTIFIER
rownames(ref_deg_rmna_mat_scale)=ref_deg_rmna_mat_scale$IDENTIFIER
head(ref_deg_rmna_mat_scale)
rownames(ref_deg_rmna_mat_scale)
rownames(ref_deg_rmna)=ref_deg_rmna_mat$IDENTIFIER
rownames(ref_deg_rmna)=ref_deg_rmna$IDENTIFIER
refeset <- GDS2eSet(ref,do.log2=F)
tissues=c("PB-CD4+T cells","PB-CD19+B cells","721-B-lymphoblasts","PB-CD56+NK cells",
"PB-CD8+T cells","ovary","uterus","uterus corpus","skin",
"hypothalamus","parietal lobe","prefrontal cortex","cerebellum",
"kidney","lung","prostate")
tissues=tissues[-c(2,5,7,8)]
v=c()
for(x in tissues) {v=c(v,which(pData(refeset)[,2] %in% tissues))}
samples=pData(refeset)[unique(v),1]
b=c()
for(x in samples) {b=c(b,grep(x,names(Table(ref))))}
dim(Table(ref)[,c(1,2,b)])
ref_deg=join(deg,Table(ref)[,c(1,2,b)],by=c("IDENTIFIER"), type = "left", match = "first")
dim(ref_deg)
## remove nas from ref
ref_deg_rmna = na.omit(ref_deg)
dim(ref_deg_rmna)
## add gene names as rownames
rownames(ref_deg_rmna)=ref_deg_rmna$IDENTIFIER

###TUMOR
gds=getGEO("GDS4296",destdir="~/Downloads")
unique(Columns(gds)$tissue)
unique(Columns(gds)$disease.state)
tail(Table(gds))
deg=read.table("~/Downloads/deg.txt",header=FALSE)
colnames(deg)=c("IDENTIFIER")
dim(deg)
data.matrix(Columns(gds)$tissue)
## left-join the data ; keep only degs (cancer cell-lines)
exp_deg=join(deg,Table(gds),by=c("IDENTIFIER"), type = "left", match = "first")
dim(exp_deg)
## remove nas from cancer cell lines
exp_deg_rmna = na.omit(exp_deg)
dim(exp_deg_rmna)
## add gene names as rownames
rownames(exp_deg_rmna)=exp_deg_rmna$IDENTIFIER
###
library("GEOquery")
library(plyr)
library(ggplot2)
REF="GDS596"
ref=getGEO(REF,destdir="~/Dash_Cell_Type")
unique(Columns(ref)$tissue)
tail(Table(ref))
deg=read.table("~/Dash_Cell_Type/deg.txt",header=FALSE)
colnames(deg)=c("IDENTIFIER")
dim(deg)
# #View(Columns(ref)$tissue)
data.matrix(Columns(ref)$tissue)
refeset <- GDS2eSet(ref,do.log2=F)
tissues=c("PB-CD4+T cells","PB-CD19+B cells","721-B-lymphoblasts","PB-CD56+NK cells",
"PB-CD8+T cells","ovary","uterus","uterus corpus","skin",
"hypothalamus","parietal lobe","prefrontal cortex","cerebellum",
"kidney","lung","prostate")
tissues=tissues[-c(2,5,7,8)]
v=c()
for(x in tissues) {v=c(v,which(pData(refeset)[,2] %in% tissues))}
samples=pData(refeset)[unique(v),1]
b=c()
for(x in samples) {b=c(b,grep(x,names(Table(ref))))}
dim(Table(ref)[,c(1,2,b)])
ref_deg=join(deg,Table(ref)[,c(1,2,b)],by=c("IDENTIFIER"), type = "left", match = "first")
dim(ref_deg)
## remove nas from ref
ref_deg_rmna = na.omit(ref_deg)
dim(ref_deg_rmna)
## add gene names as rownames
rownames(ref_deg_rmna)=ref_deg_rmna$IDENTIFIER
gds=getGEO("GDS4296",destdir="~/Downloads")
unique(Columns(gds)$tissue)
unique(Columns(gds)$disease.state)
tail(Table(gds))
deg=read.table("~/Downloads/deg.txt",header=FALSE)
colnames(deg)=c("IDENTIFIER")
dim(deg)
data.matrix(Columns(gds)$tissue)
exp_deg=join(deg,Table(gds),by=c("IDENTIFIER"), type = "left", match = "first")
dim(exp_deg)
## remove nas from experimental data (cancer cell-lines)
exp_deg_rmna = na.omit(exp_deg)
dim(exp_deg_rmna)
## add gene names as rownames from experimental data
rownames(exp_deg_rmna)=exp_deg_rmna$IDENTIFIER
inter=intersect(rownames(exp_deg_rmna),rownames(ref_deg_rmna))
#scale the experimental dataset
exp_deg_rmna_mat=data.matrix(exp_deg_rmna)
exp_deg_rmna_mat_scale=scale(exp_deg_rmna_mat)
#scale the reference dataset
ref_deg_rmna_mat=data.matrix(ref_deg_rmna)
ref_deg_rmna_mat_scale=scale(ref_deg_rmna_mat)
df<-cbind(exp_deg_rmna_mat_scale[inter,],ref_deg_rmna_mat_scale[inter,-c(1,2)])
dim(df)
df_trans = t(data.matrix(df[,-(1:2)]))
dim(df_trans)
df_trans_mat = data.matrix(df_trans)
dim(df_trans_mat)
df_trans_mat_scale=scale(df_trans_mat)
dim(df_trans_mat_scale)
svd = svd( df_trans_mat_scale )
U = svd$u
V = svd$v #PC loadings
D = svd$d
Z = df_trans_mat_scale%*%V #PCs
df_Top4_pc=U[,1:4]
colnames(df_Top4_pc)=c("PC1","PC2","PC3","PC4")

## plotting the first two principal components
par(mfrow=c(1,1))
groups1<-Columns(gds)$tissue
groups2 <- paste0("normal_",pData(refeset)[unique(v),2])
t<-c("brain","brain","brain","brain","brain","brain","brain","brain","ovary","ovary","prostate","prostate","blood","blood","blood","blood","blood","blood","lung","lung","skin","skin","kidney","kidney")
groups2<-paste0("normal_",t)
groups<-c(as.character(groups1),groups2)
p <- ggplot(data.frame(df_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=10)) #+
#  scale_shape_manual(values=1:nlevels(groups))
colnames(exp_deg_rmna_mat)
df_trans_mat_scale=df_trans_mat
# scale(df_trans_mat)
dim(df_trans_mat_scale)
svd = svd( df_trans_mat_scale )
U = svd$u
V = svd$v #PC loadings
D = svd$d
Z = df_trans_mat_scale%*%V #PCs

## get the top 4 principal components
df_Top4_pc=U[,1:4]
colnames(df_Top4_pc)=c("PC1","PC2","PC3","PC4")

## plot
par(mfrow=c(1,1))
groups1<-Columns(gds)$tissue
groups2 <- paste0("normal_",pData(refeset)[unique(v),2])
t<-c("brain","brain","brain","brain","brain","brain","brain","brain","ovary","ovary","prostate","prostate","blood","blood","blood","blood","blood","blood","lung","lung","skin","skin","kidney","kidney")
groups2<-paste0("normal_",t)
groups<-c(as.character(groups1),groups2)
p <- ggplot(data.frame(df_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=10)) #+
#  scale_shape_manual(values=1:nlevels(groups))
colnames(df_trans_mat)
p <- ggplot(data.frame(df_Top4_pc[,1:3]), aes(PC1, PC3))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=10)) #+
p <- ggplot(data.frame(df_Top4_pc[,1:3]), aes(PC1, PC3))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=15)) #+
p <- ggplot(data.frame(df_Top4_pc[,1:3]), aes(PC1, PC3))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=20)) #+
View(df_trans_mat_scale)
length(groups)
length(rownames(df_trans_mat))
data.frame(rownames(df_trans_mat),groups)
groups1<-paste0("cancer_",Columns(gds)$tissue)
groups2 <- paste0("normal_",pData(refeset)[unique(v),2])
t<-c("brain","brain","brain","brain","brain","brain","brain","brain","ovary","ovary","prostate","prostate","blood","blood","blood","blood","blood","blood","lung","lung","skin","skin","kidney","kidney")
groups2<-paste0("normal_",t)
groups<-c(as.character(groups1),groups2)
p <- ggplot(data.frame(df_Top4_pc[,1:3]), aes(PC1, PC3))
p + geom_point(size=5, aes(colour = groups)) +
theme_bw() +theme(text = element_text(size=20)) #+
data.frame(rownames(df_trans_mat),groups)
write.table(data.frame("Samples"=rownames(df_trans_mat),"Tissue"=groups,path="~/Dash_Cell_Type")
)
write.table(data.frame("Samples"=rownames(df_trans_mat),"Tissue"=groups,path="~/Dash_Cell_Type"),colnames=F,rownames=F,quotes=F)
?write.table
write.table(data.frame("Samples"=rownames(df_trans_mat),"Tissue"=groups,path="~/Dash_Cell_Type"),col.names=F,row.names=F,quote=F)
write.table(data.frame("Samples"=rownames(df_trans_mat),"Tissue"=groups,path="~/Dash_Cell_Type"),col.names=F,row.names=F,quote=F)
df_trans_mat_scale_trans=t(df_trans_mat_scale)
library(sva)
library("sva")
install.packages("sva")
library("sva")
biocLite("sva")
source("https://www.bioconductor.org/biocLite.R")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
biocLite("sva")
library("sva")
biocLite("bladderbatch")
biocLite("bladderbatch")
biocLite("pamr")
write.table(data.frame("Samples"=rownames(df_trans_mat),"Tissue"=groups,path="~/Dash_Cell_Type"),col.names=F,row.names=F,quote=F)
data.frame("sample"=rownames(df_trans_mat),"cancer"=groups)
data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)))
data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat))
pheno=data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat))
pheno
dim(pheno)
mod = model.matrix(~as.factor(cancer), data=pheno)
mod0 = model.matrix(~1,data=pheno)
n.sv = num.sv(edata,mod,method="leek")
n.sv = num.sv(df_trans_mat_scale_trans,mod,method="leek")
n.sv
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
batch = pheno$batch
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
mod0
mod
svobj = sva(df_trans_mat_scale_trans,mod,mod0)
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
n.sv = num.sv(df_trans_mat_scale_trans,mod,method="leek")
n.sv
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=0)
mod
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
head(mod)
dim(mod)
solve(t(mod)%*%mod)
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=2)
svobj = sva(df_trans_mat_scale_trans,mod,mod0,n.sv=1)
quantile(df_trans_mat_scale_trans)
hist(rowVars(df_trans_mat_scale_trans))
hist(rowSd(df_trans_mat_scale_trans))
hist(rowSds(df_trans_mat_scale_trans))
library(genefilter)
hist(rowSds(df_trans_mat_scale_trans))
sum(rowSds(df_trans_mat_scale_trans)==0)
dim(mod)
colSums(mod)
df_Top4_pc[,1]
data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat))
write.table(data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat))file="~/Dash_Cell_Type",col.names=F,row.names=F,quotes=F)
write.table(data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat)),file="~/Dash_Cell_Type",col.names=F,row.names=F,quotes=F)
?write.table
write.table(data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat)),file="~/Dash_Cell_Type",col.names=F,row.names=F,quote=F)
write.table(data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat)),file="~/Dash_Cell_Type/temp.txt",col.names=F,row.names=F,quote=F)
write.table(data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)),row.names=rownames(df_trans_mat)),file="~/Dash_Cell_Type/temp.txt",col.names=F,row.names=F,quote=F,sep="\t")
df_trans_mat_scale
dim(df_trans_mat_scale)
write.table(data.frame(df_trans_mat_scale),row.names=rownames(df_trans_mat_scale)),file="~/Dash_Cell_Type/temp2.txt",col.names=F,row.names=F,quote=F,sep="\t")
write.table(data.frame(df_trans_mat_scale),row.names=rownames(df_trans_mat)),file="~/Dash_Cell_Type/temp2.txt",col.names=F,row.names=F,quote=F,sep="\t")
data.frame(df_trans_mat_scale
)
dim(data.frame(df_trans_mat_scale)
)
v=data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24))
)
v
View(v)
v=data.frame("sample"=rownames(df_trans_mat),"cancer"=groups,"batch"=c(rep(1,174),rep(2,24)))
class(df_trans_mat_scale_trans)
data.frame(df_trans_mat_scale_trans)
dim(data.frame(df_trans_mat_scale_trans))
dim(t(data.frame(df_trans_mat_scale_trans)))
cbind(t(data.frame(df_trans_mat_scale_trans)),v[,3])
dim(cbind(t(data.frame(df_trans_mat_scale_trans)),v[,3]))
v[,3]
v[,2]
dim(cbind(t(data.frame(df_trans_mat_scale_trans)),v[,2]))
View(bind(t(data.frame(df_trans_mat_scale_trans)),v[,2]))
View(cbind(t(data.frame(df_trans_mat_scale_trans)),v[,2]))
colnames(cbind(t(data.frame(df_trans_mat_scale_trans)),v[,2]))
dim(cbind(data.frame(df_trans_mat_scale),v[,2]))
colnames(cbind(data.frame(df_trans_mat_scale),v[,2]))
colnames(cbind(t(data.frame(df_trans_mat_scale_trans)),"tissue"=v[,2]))
colnames(cbind(data.frame(df_trans_mat_scale),"tissue"=v[,2]))
colnames(cbind(data.frame(df_trans_mat_scale),"tissue"=v[,2],"batch"=v[,3]))
final=cbind(data.frame(df_trans_mat_scale),"tissue"=v[,2],"batch"=v[,3])
write.table(final,"~/Dash_Cell_Type/final.txt")
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F)
View(final)
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F,row.names=F.col.names=F)
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F,row.names=F,col.names=F)
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F,row.names=F,col.names=T)
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F,row.names=F,col.names=T,sep="\t")
final=cbind("tissue"=v[,2],"batch"=v[,3],data.frame(df_trans_mat_scale))
write.table(final,"~/Dash_Cell_Type/final.txt",quote=F,row.names=F,col.names=T,sep="\t")
View(final)
final=cbind("tissue"=v[,2],"batch"=v[,3],df_Top4_pc[,1:3],data.frame(df_trans_mat_scale))
final
dim(final)
View(final)
write.table(final,"~/Dash_Cell_Type/finalpc.txt",quote=F,row.names=F,col.names=T,sep="\t")
library(devtools)
install.packages("devtools")
setwd("~/Dash_Cell_Type")
install.packages("devtools")
library(devtools)
install_github('dagdata','genomicsclass')
library(dagdata)
data(tissuesGeneExpression)
library(rafalib)
install.packages("rafalab")
library(rafalib)
final
data=read.table("~/Dash_Cell_Type/finalpc.txt")
?read.table
data=read.table("~/Dash_Cell_Type/finalpc.txt",header=F)
data=read.table("~/Dash_Cell_Type/temp.txt",header=F)
view(final)
View(final)
write.table(final,file="~/Dash_Cell_Type/final_withpc.txt",col.names=T,row.names=T,quote=F,sep="\t")
data=read.table("~/Dash_Cell_Type/final_withpc.txt",header=T)
final
head(final)[1,]
view(df_trans_mat_scale_trans)
View(df_trans_mat_scale_trans)
data=df_trans_mat_scale_trans
df_trans_mat
dim(df_trans_mat)
data=df_trans_mat
pc<-prcomp(data)
names(pc)
plot(pc$x[, 1], pc$x[, 2], col = group, main = "PCA", xlab = "PC1", ylab = "PC2")
group(final$tissue)
group=final$tissue
length(group)
plot(pc$x[, 1], pc$x[, 2], col = group, main = "PCA", xlab = "PC1", ylab = "PC2")
e
cx <- sweep(data, 2, colMeans(data), "-")
sv <- svd(cx)
names(sv)
plot(sv$u[, 1], sv$u[, 2], col = group, main = "SVD", xlab = "U1", ylab = "U2")
sv$v[1:5, 1:5]
pc$rotation[1:5, 1:5]
head(sv$d^2)
head(pc$sdev^2)
head(sv$d^2/(ncol(e) - 1))
head(sv$d^2/(ncol(data) - 1))
ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), xlim = c(0, 15), type = "b", pch = 16, xlab = "principal components", ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), xlim = c(0, 5), type = "b", pch = 16, xlab = "principal components", ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), xlim = c(0, 10), type = "b", pch = 16, xlab = "principal components", ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), type = "b", pch = 16, xlab = "principal components", ylab = "variance explained")
svNoCenter <- svd(x)
svNoCenter <- svd(data)
plot(pc$x[, 1], pc$x[, 2], col = group, main = "PCA", xlab = "PC1", ylab = "PC2")
points(0, 0, pch = 3, cex = 4, lwd = 4)
plot(svNoCenter$u[, 1], svNoCenter$u[, 2], col = group, main = "SVD not centered", xlab = "U1", ylab = "U2")
sv2 <- svd(t(data))
detach("package:Biobase", unload=TRUE)
detach("package:BiocGenerics", unload=TRUE)
detach("package:BiocInstaller", unload=TRUE)
detach("package:corpcor", unload=TRUE)
detach("package:dagdata", unload=TRUE)
detach("package:datasets", unload=TRUE)
detach("package:devtools", unload=TRUE)
detach("package:genefilter", unload=TRUE)
detach("package:GEOquery", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:limma", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:mgcv", unload=TRUE)
detach("package:nlme", unload=TRUE)
detach("package:parallel", unload=TRUE)
detach("package:plyr", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:sva", unload=TRUE)
detach("package:utils", unload=TRUE)
library("GEOquery")
GDS="GDS4296" #NCI-60 Cancer cell line panel
REF="GDS596" #Large scale analysis of the human transcriptome
REFGSE="GSE1133"
GSE="GSE32474"
path="~/Dash_Cell_Type"
gds=getGEO(GDS,destdir=path)
ref=getGEO(REF,destdir=path)
names(Meta(gds)) #it's a list of metadata
names(Columns(gds))
Columns(gds)[,1]
nsamples=length(Columns(gds)[,1])
nsamples
numsamples=length(Columns(gds)[,1])
names(Columns(gds))
num.samples=length(Columns(gds)[,1])
num.cell.line=length(Columns(gds)[,2])
num.cell.line
num.samples=length(unique(Columns(gds)[,1]))
num.cell.line=length(unique(Columns(gds)[,2]))
num.samples
num.cell.line
num.tissue=length(unique(Columns(gds)[,3]))
num.tissue
num.disease.state=length(unique(Columns(gds)[,4]))
num.disease.state
GPL=Meta(gds)$platform
REFGPL=Meta(ref)$platform
Table(gsmlist[[1]])
gse=getGEO(GSE,destdir=path,GSEMatrix=F)
gsmlist=GSMList(gse)
refgse=getGEO(REFGSE,destdir=path,GSEMatrix=F)
refgsmlist=GSMList(refgse)
REFGPL=Meta(ref)$platform
REFGPL
refeset=GDS2eSet(ref,do.log2=T)
?GDS2eSet
dim(refeset)
gdseset=GDS2eSet(gds,do.log2=T)
dim(Table(gds))
head(Table(gds))[,1:4]
Table(gsmlist[[1]])
ma=GDS2MA(gds,do.log2=T)
head(pData(eset)[,1:3])
hist(as.numeric(Table(gsmlist[[1]][,2])))
hist(as.numeric(Table(refgsmlist[[1]][,2])))
save.image("~/Dash_Cell_Type/GEO.RData")
library("GEOquery")
library(plyr)
library(ggplot2)
gds=getGEO("GDS4296",destdir="~/Downloads")
path="~/Dash_Cell_Type"
unique(Columns(gds)$tissue)
unique(Columns(gds)$disease.state)
gds=getGEO("GDS4296",destdir=path)
tail(Table(gds))
deg=read.table("~/Downloads/deg.txt",header=FALSE)
colnames(deg)=c("IDENTIFIER")
dim(deg)
deg=read.table(paste0(path,"/deg.txt"),header=FALSE)
colnames(deg)=c("IDENTIFIER")
dim(deg)
View(Columns(gds)$tissue)
data.matrix(Columns(gds)$tissue)
exp_deg=join(deg,Table(gds),by=c("IDENTIFIER"), type = "left", match = "first")
dim(exp_deg)
dim(Table(gds))
exp_deg_rmna = na.omit(exp_deg)
dim(exp_deg_rmna)
rownames(exp_deg_rmna)=exp_deg_rmna$IDENTIFIER
dim(exp_deg_rmna)
exp_deg_rmna_trans = t(data.matrix(exp_deg_rmna[,-(1:2)]))
exp_deg_rmna_trans_mat = data.matrix(exp_deg_rmna_trans)
exp_deg_rmna_trans
class(exp_deg_rmna_trans)
class(exp_deg_rmna_trans_mat)
exp_deg_rmna_trans_mat_scale=scale(exp_deg_rmna_trans)
svd = svd( exp_deg_rmna_trans_mat_scale )
U = svd$u
V = svd$v #PC loadings
D = svd$d
Z = exp_deg_rmna_trans_mat_scale%*%V #PCs
exp_Top4_pc=U[,1:4]
colnames(exp_Top4_pc)=c("PC1","PC2","PC3","PC4")
par(mfrow=c(1,1))
groups <- factor(Columns(gds)$tissue)
p <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) + theme_bw() +theme(text = element_text(size=20))
groups
p <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
p
p + geom_point(size=5, aes(colour = groups))
data.frame(exp_Top4_pc[,1:2])
class(exp_Top4_pc)
p + geom_point(size=5
)
groups_disease <- factor(Columns(gds)$disease.state)
q <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
q + geom_point(size=5, aes(colour = groups_disease)) + theme_bw() +theme(text = element_text(size=20))
install.packages(path, type="source", repos=NULL)
install.packages(paste0(path,"/plyr"), type="source", repos=NULL)
par(mfrow=c(1,1))
groups <- factor(Columns(gds)$tissue)
p <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) + theme_bw() +theme(text = element_text(size=20))
library(ggplot2)
par(mfrow=c(1,1))
groups <- factor(Columns(gds)$tissue)
p <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) + theme_bw() +theme(text = element_text(size=20))
groups_disease <- factor(Columns(gds)$disease.state)
q <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
q + geom_point(size=5, aes(colour = groups_disease)) + theme_bw() +theme(text = element_text(size=20))
install.packages(ggplots)
install.packages("ggplots")
par(mfrow=c(1,1))
groups <- factor(Columns(gds)$tissue)
p <- ggplot(data.frame(exp_Top4_pc[,1:2]), aes(PC1, PC2))
p + geom_point(size=5, aes(colour = groups)) + theme_bw() +theme(text = element_text(size=20))
